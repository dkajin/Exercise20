library(Exercise20)
library(lubridate)
library(Exercise20)
library(Exercise20)
library(lubridate)
data <- fread("transactions.csv")
library(Exercise20)
library(lubridate)
setwd("C:/Users/domin/OneDrive - Universität Zürich UZH/FS2024/R - a non-technical intro to big data techinques, team work and interactive visualization")
data <- fread("transactions.csv")
library(Exercise20)
library(lubridate)
data <- fread("transactions.csv")
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
help(fread)
library(Exercise20)
library(Exercise20)
library(data.table)
library(data.table)
library(lubridate)
library(lubridate)
data <- fread("transactions.csv")
setwd("C:/Users/domin/OneDrive - Universität Zürich UZH/FS2024/R - a non-technical intro to big data techinques, team work and interactive visualization")
library(data.table)
library(lubridate)
library(Exercise20)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- RFMfunction(data, 0.2, 0.2, 0.6)
head(res)
RFMfunction <- function(data, weight_recency=1, weight_frequency=1, weight_monetary=1){
# adjusting values to ensure that the weights add up to one
weight_recency2 <- weight_recency/sum(weight_recency, weight_frequency, weight_monetary)
weight_frequency2 <- weight_frequency/sum(weight_recency, weight_frequency, weight_monetary)
weight_monetary2 <- weight_monetary/sum(weight_recency, weight_frequency, weight_monetary)
print("weights are calculated")
# RFM measures
max.Date <- max(data$TransDate)
temp <- data[,list(
recency = as.numeric(max.Date - max(TransDate)),
frequency = .N,
monetary = mean(PurchAmount)),
by=Customer
]
print("RFM Measure done")
# RFM scores
temp <- temp[,list(Customer,
recency = as.numeric(cut2(-recency, g=3)),
frequency = as.numeric(cut2(frequency, g=3)),
monetary = as.numeric(cut2(monetary, g=3)))]
# Overall RFM score
temp[,finalscore:=weight_recency2*recency+weight_frequency2*frequency+weight_monetary2*monetary]
print("Overall RFM Measure done")
# RFM group
temp[,group:=round(finalscore)]
# Return final table
return(temp)
}
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- RFMfunction(data, 0.2, 0.2, 0.6)
RFMfunction <- function(data, weight_recency=1, weight_frequency=1, weight_monetary=1){
# adjusting values to ensure that the weights add up to one
weight_recency2 <- weight_recency/sum(weight_recency, weight_frequency, weight_monetary)
weight_frequency2 <- weight_frequency/sum(weight_recency, weight_frequency, weight_monetary)
weight_monetary2 <- weight_monetary/sum(weight_recency, weight_frequency, weight_monetary)
print("weights are calculated")
# RFM measures
max.Date <- max(data$TransDate)
temp <- data[,list(
recency = as.numeric(max.Date - max(TransDate)),
frequency = .N,
monetary = mean(PurchAmount)),
by=Customer
]
print("RFM Measure done")
# RFM scores
temp <- temp[,list(Customer,
recency = as.numeric(cut2(-recency, g=3)),
frequency = as.numeric(cut2(frequency, g=3)),
monetary = as.numeric(cut2(monetary, g=3)))]
# Overall RFM score
temp[,finalscore:=weight_recency2*recency+weight_frequency2*frequency+weight_monetary2*monetary]
print("Overall RFM Measure done")
# RFM group
temp[,group:=round(finalscore)]
# Return final table
return(temp)
}
library(lubridate)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- RFMfunction(data, 0.2, 0.2, 0.6)
RFMfunction <- function(data, weight_recency=1, weight_frequency=1, weight_monetary=1){
# adjusting values to ensure that the weights add up to one
weight_recency2 <- weight_recency/sum(weight_recency, weight_frequency, weight_monetary)
weight_frequency2 <- weight_frequency/sum(weight_recency, weight_frequency, weight_monetary)
weight_monetary2 <- weight_monetary/sum(weight_recency, weight_frequency, weight_monetary)
print("weights are calculated")
# RFM measures
max.Date <- max(data$TransDate)
temp <- data[,list(
recency = as.numeric(max.Date - max(TransDate)),
frequency = .N,
monetary = mean(PurchAmount)),
by=Customer
]
print("RFM Measure done")
# RFM scores
temp <- temp[,list(Customer,
recency = as.numeric(cut2(-recency, g=3)),
frequency = as.numeric(cut2(frequency, g=3)),
monetary = as.numeric(cut2(monetary, g=3)))]
# Overall RFM score
temp[,finalscore:=weight_recency2*recency+weight_frequency2*frequency+weight_monetary2*monetary]
print("Overall RFM Measure done")
# RFM group
temp[,group:=round(finalscore)]
# Return final table
return(temp)
}
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- RFMfunction(data, 0.2, 0.2, 0.6)
head(res)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- RFMfunction(data, 0.2, 0.2, 0.6)
head(res)
install.packages("roxygen2")
library(roxygen2)
library(Exercise20)
library(Exercise20)
library(Exercise20)
help("calculateRFM")
library(Exercise20)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[, TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
data[,TransDate:=dmy(TransDate)]
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[,TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[,TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
setwd("C:/Users/domin/OneDrive - Universität Zürich UZH/FS2024/R - a non-technical intro to big data techinques, team work and interactive visualization")
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[,TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[,TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
library(Exercise20)
library(Exercise20)
library(data.table)
library(lubridate)
library(Hmisc)
data <- fread("transactions.csv")
data[,TransDate:=dmy(TransDate)]
res <- calculateRFM(data, 0.2, 0.2, 0.6)
